name: CMake Build

on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        generator: ["Unix Makefiles", "Ninja", "MinGW Makefiles"]
        exclude:
            - os: ubuntu-latest
              generator: "MinGW Makefiles"
            - os: macos-latest
              generator: "MinGW Makefiles"
            - os: windows-latest
              generator: "Unix Makefiles"
            - os: windows-latest
              generator: "Ninja"

        include:
          - os: ubuntu-latest
            lib-ext: so
            exe-ext: ""
            metis-lib: -DMOO_METIS_LIB=/usr/lib/x86_64-linux-gnu/libmetis.so.5.1.0

          - os: ubuntu-latest
            lib-ext: dll
            exe-ext: ".exe"
            metis-lib: ""

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v5

      - name: Install METIS, LAPACK
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -q
          sudo apt-get -qy install metis libblas-dev liblapack-dev gfortran

      - name: Setup MSYS2, METIS, LAPACK
        uses: msys2/setup-msys2@v2
        if: runner.os == 'Windows'
        with:
          msystem: UCRT64
          install: |
            mingw-w64-ucrt-x86_64-metis
            mingw-w64-ucrt-x86_64-blas
            mingw-w64-ucrt-x86_64-lapack

      - shell: msys2 {0}
        if: runner.os == 'Windows'
        run: |
          uname -a

      - name: Configure
        run: |
          cmake -S . -B build -DCMAKE_INSTALL_PREFIX=install ${{ matrix.metis-lib }} -DMOO_WITH_GDOPT_EXAMPLE=ON -G "${{ matrix.generator }}"

      - name: Build
        run: cmake --build build --target install

      - name: Run test
        run: ./build/gdopt${{ matrix.exe-ext }}

      - uses: actions/upload-artifact@v4
        with:
          name: install-${{ matrix.os }}-${{ matrix.generator }}
          path: install/
